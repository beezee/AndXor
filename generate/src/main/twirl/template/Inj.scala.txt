@import ldr.syntax._
@import scalaz.Zipper

@(z: Zipper[String], tpes: List[String])

  implicit def inja@{z.index}[F[_], @{tpes.prod}]:
  Inj[LDRK@{tpes.length}[F, @{tpes.prod}]#Cop, F[@{z.focus}]] =
    Inj.instance(_@{
      Some(z.rights.toList).filter(_.nonEmpty)
        .map(rt => s""".left[${rt.djK("F")}]""").getOrElse("")}@{
     z.lefts.toList.map(rt => s""".right[F[${rt}]]""")
      .mkString("")})
